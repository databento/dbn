[package]
name = "dbn"
authors = ["Databento <support@databento.com>"]
version = "0.14.2"
edition = "2021"
description = "Library for working with Databento Binary Encoding (DBN)"
license = "Apache-2.0"
repository = "https://github.com/databento/dbn"
keywords = ["finance", "market-data", "conversion", "encoding", "trading"]
# see https://crates.io/category_slugs
categories = ["encoding"]

[package.metadata.docs.rs]
# Document all features on docs.rs
all-features = true
# To build locally: `RUSTDOCFLAGS="--cfg docsrs" cargo +nightly doc --all-features --open`
rustdoc-args = ["--cfg", "docsrs"]

[features]
default = []
async = ["dep:async-compression", "dep:tokio"]
python = ["dep:pyo3", "dep:strum"]
serde = ["dep:serde", "time/parsing", "time/serde"]
# Enables deriving the `Copy` trait for records.
trivial_copy = []

[dependencies]
dbn-macros = { version = "=0.14.2", path = "../dbn-macros" }

# async (de)compression
async-compression = { version = "0.4.4", features = ["tokio", "zstd"], optional = true }
# CSV serialization
csv = "1.3"
# Fast integer to string conversion
itoa = "1.0"
# Deriving translation between integers and enums
num_enum = "0.7"
# Python bindings for Rust
pyo3 = { version = "0.20", optional = true }
# JSON serialization
json-writer = "0.3"
# deserialization
serde = { version = "1.0", features = ["derive"], optional = true }
# zero-copy DBN decoding
streaming-iterator = "0.1.9"
# extra enum traits for Python
strum = { version = "0.25", features = ["derive"], optional = true }
# Custom error helper
thiserror = "1.0"
# date and datetime support
time = { version = "0.3", features = ["formatting", "macros"] }
# async traits
tokio = { version = "1", features = ["fs", "io-util"], optional = true }
# (de)compression
zstd = "0.13"
serde_arrow = { version = "0.8.0", features = ["arrow-45"]}
polars = { version = "0.35.4", features = ["parquet", "dtype-struct", "dtype-u8", "dtype-i8", "dtype-u16", "lazy", "streaming"] }
polars-core = { version = "0.35.4", features = ["arrow_rs"] }

[dev-dependencies]
# Parameterized testing
rstest = "0.18.2"
# Enum helpers
strum = { version = "0.25", features = ["derive"] }
# Async runtime
tokio = { version = "1", features = ["fs", "io-util", "macros", "rt-multi-thread"] }
# Checking alignment and padding
type-layout = "0.2.0"
